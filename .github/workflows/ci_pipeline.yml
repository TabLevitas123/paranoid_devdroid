
name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      continue-on-error: false

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
      continue-on-error: false

    - name: Install dependencies
      run: |
        pip install flake8 black
      continue-on-error: false
      retry: 3  # Retry step 3 times if it fails

    - name: Run Flake8 for linting
      run: |
        flake8 .
      continue-on-error: true  # Do not fail the pipeline but log errors
      retry: 2  # Retry twice

    - name: Run Black for formatting
      run: |
        black --check .
      continue-on-error: true
      retry: 2

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        pytest
      continue-on-error: false  # Fail the pipeline if tests fail, but output detailed error logs

  security:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4

    - name: Install dependencies
      run: |
        pip install bandit

    - name: Run Bandit for security checks
      run: |
        bandit -r .
      continue-on-error: false  # Ensure no security issues are ignored

  deploy:
    needs: security
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to AWS
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-east-2'
      run: |
        echo "Deploying the application..."
      continue-on-error: false  # Fail if deployment fails
